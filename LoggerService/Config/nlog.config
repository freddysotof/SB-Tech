<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Error"
	  throwConfigExceptions="true"
	  
     >
	<!--  internalLogFile="Config\logs\internallog.txt"-->
	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>

	</extensions>
	<targets>
		<target name="logfile" xsi:type="File"
				fileName="Config/logs/${shortdate}_logfile.txt"
				layout="${longdate} ${level:uppercase=true} ${message}"/>
		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<target xsi:type="File" name="ownFile-web" fileName="Config/logs/nlog-AspNetCore-TIV-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}| body: ${aspnet-request-posted-body}" />

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<target xsi:type="Console" name="lifetimeConsole" layout="${level:truncate=4:tolower=true}\: ${logger}[0]${newline}      ${message}${exception:format=tostring}" />
		<!--dbProvider="System.Data.SqlClient"-->
		<!--useTransactions="true"-->
		<target name="database" xsi:type="Database" keepConnection="true"
			  
				dbProvider="Microsoft.Data.SqlClient.SqlConnection, Microsoft.Data.SqlClient, Version=1.0.0.0,Culture=neutral,PublicKeyToken=23ec7fc2d6eaa4a5"
		connectionString="${configsetting:item=ConnectionStrings.NLogConnection}"
			commandText="SVP.SP_InsertSvpLog"
			commandType="StoredProcedure">
			<parameter name="@date" layout="${date:s}" />
			<parameter name="@thread" layout="${threadid}" />
			<parameter name="@level" layout="${level:uppercase=true}" />
			<parameter name="@url" layout="${aspnet-request-url}" />
			<parameter name="@logger" layout="${logger}" />
			<parameter name="@action" layout="${mdlc:action}" />
			<parameter name="@sourceAction" layout="Controller: ${aspnet-mvc-controller} | Action: ${aspnet-mvc-action}" />
			<parameter name="@message" layout="${message}" />
			<parameter name="@exception" layout="${exception:format=tostring}" />
			<parameter name="@app" layout="${iis-site-name}" />
			<parameter name="@user" layout="${aspnet-user-identity:uppercase=true}" />
			<parameter name="@requestBody" layout="${aspnet-request-posted-body}" />
			<parameter name="@reference" layout="${mdlc:reference}" />
			<parameter name="@json" layout="${mdlc:json}" />
		</target>
	</targets>
	<rules>

		<!--All logs, including from Microsoft-->
		<!--<logger name="*" minlevel="Trace" writeTo="console" />-->

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />-
		<logger name="System.Net.Http.*" maxlevel="Info" final="true" />

		<!--Selected logs, write to Database-->
		<logger minlevel='Trace' name="*" writeTo="database"/>

		<!--<logger name="*" minlevel="Trace" writeTo="ownFile-web" />-->
	</rules>
</nlog>